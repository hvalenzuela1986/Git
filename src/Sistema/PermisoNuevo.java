/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Sistema;

import Clases.Funcionario;
import Clases.FuncionarioDAO;
import java.util.ArrayList;
import Clases.CargoDAO;
import Clases.Permiso;
import Clases.PermisoDAO;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Catherine
 */
public class PermisoNuevo extends javax.swing.JInternalFrame {

    /**
     * Creates new form PermisoNuevo
     */
    private FuncionarioDAO funcionario;
    private DefaultListModel<String> modelo;
    private String anyo;
    
    public PermisoNuevo() {
        initComponents();
        funcionario = new FuncionarioDAO();
        modelo = new DefaultListModel<>();
        lstFechas.setModel(modelo);
        cboRut.removeAllItems();
        cboRut.addItem("<Seleccione RUT>");
        ArrayList <Funcionario> ListaFuncio = new ArrayList <>();
        funcionario.ObtenerFuncionarios(ListaFuncio);
        for (int i = 0; i < ListaFuncio.size(); i++) {
            cboRut.addItem(ListaFuncio.get(i).getRut());
        }
        Date ahora = new Date();
        SimpleDateFormat formato = new SimpleDateFormat("dd-MM-yyyy");
        String fecha = formato.format(ahora);
        anyo = fecha.split("-")[2];
        txtFecha.setMinSelectableDate(ahora);
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cboRut = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        butAceptar = new javax.swing.JButton();
        Cargo = new javax.swing.JLabel();
        txtCargo = new javax.swing.JTextField();
        CantDias = new javax.swing.JLabel();
        butCancelar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtMotivo = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        txtApellido = new javax.swing.JTextField();
        txtFecha = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        butAgregar = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        lstFechas = new javax.swing.JList();
        butQuitar = new javax.swing.JButton();
        cboCantidad = new javax.swing.JComboBox();

        setClosable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Nuevo Permiso");
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        java.awt.GridBagLayout jPanel1Layout1 = new java.awt.GridBagLayout();
        jPanel1Layout1.columnWidths = new int[] {0, 16, 0, 16, 0, 16, 0, 16, 0};
        jPanel1Layout1.rowHeights = new int[] {0, 14, 0, 14, 0, 14, 0, 14, 0, 14, 0, 14, 0, 14, 0, 14, 0, 14, 0};
        jPanel1.setLayout(jPanel1Layout1);

        jLabel1.setText("Rut Funcionario :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanel1.add(jLabel1, gridBagConstraints);

        cboRut.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboRut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboRutActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel1.add(cboRut, gridBagConstraints);

        jLabel2.setText("Nombres :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanel1.add(jLabel2, gridBagConstraints);

        txtNombre.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel1.add(txtNombre, gridBagConstraints);

        butAceptar.setText("Registrar Permiso");
        butAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butAceptarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel1.add(butAceptar, gridBagConstraints);

        Cargo.setText("Cargo :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanel1.add(Cargo, gridBagConstraints);

        txtCargo.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(txtCargo, gridBagConstraints);

        CantDias.setText("Cantidad de d√≠as :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanel1.add(CantDias, gridBagConstraints);

        butCancelar.setText("Cancelar");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        jPanel1.add(butCancelar, gridBagConstraints);

        jLabel3.setText("Motivo :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        jPanel1.add(jLabel3, gridBagConstraints);

        txtMotivo.setColumns(20);
        txtMotivo.setRows(5);
        jScrollPane2.setViewportView(txtMotivo);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(jScrollPane2, gridBagConstraints);

        jLabel4.setText("Apellidos :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        jPanel1.add(jLabel4, gridBagConstraints);

        txtApellido.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(txtApellido, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(txtFecha, gridBagConstraints);

        jLabel5.setText("Fechas :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        jPanel1.add(jLabel5, gridBagConstraints);

        butAgregar.setText("Agregar");
        butAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butAgregarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel1.add(butAgregar, gridBagConstraints);

        lstFechas.setVisibleRowCount(5);
        jScrollPane3.setViewportView(lstFechas);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(jScrollPane3, gridBagConstraints);

        butQuitar.setText("Quitar");
        butQuitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butQuitarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_END;
        jPanel1.add(butQuitar, gridBagConstraints);

        cboCantidad.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboCantidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboCantidadActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(cboCantidad, gridBagConstraints);

        jScrollPane1.setViewportView(jPanel1);

        getContentPane().add(jScrollPane1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cboRutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboRutActionPerformed
        // TODO add your handling code here:
        if(cboRut.getSelectedIndex()>0){
            String Rut = (String)cboRut.getSelectedItem();
            float total = (float)PermisoDAO.ObtenerTotal(Rut, anyo);
            if(total >= 6){
                JOptionPane.showMessageDialog(this, "Funcionario en l√≠mite de n√∫mero de permisos durante el " + anyo);
                cboRut.setSelectedIndex(0);
            }
            else{
                Funcionario Fun  = FuncionarioDAO.BuscarFuncionario(Rut);
                String [] nombre = Fun.getNombre().split("_");
                txtNombre.setText(nombre[0]);
                txtApellido.setText(nombre[1]);
                txtCargo.setText(CargoDAO.ObtenerNombre(Fun.getCargo()));
                cboCantidad.removeAllItems();
                cboCantidad.addItem("<Seleccione Cantidad>");
                for (int i = 1; i <= (6 - total); i++) {
                    cboCantidad.addItem(Integer.toString(i));
                }
            }
        }
        else{
            cboCantidad.removeAllItems();
            cboCantidad.addItem("<Seleccione Cantidad>");
            txtNombre.setText("");
            txtApellido.setText("");
            txtCargo.setText("");
        }
    }//GEN-LAST:event_cboRutActionPerformed

    private void butAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butAceptarActionPerformed
        String rut = (String)cboRut.getSelectedItem();
        String cargo = txtCargo.getText();
        int codCargo = CargoDAO.ObtenerCodigo(cargo);
        String dias = (String)cboCantidad.getSelectedItem();
        Date ahora = new Date();
        SimpleDateFormat formato = new SimpleDateFormat("dd-MM-yyyy");
        String fecha = formato.format(ahora);
        ArrayList<String> fechas = new ArrayList<>();
        for (int i = 0; i < modelo.getSize(); i++) {
            fechas.add(modelo.getElementAt(i));
        }
        String motivo = txtMotivo.getText();
        if(cboRut.getSelectedIndex() > 0){
            if(cboCantidad.getSelectedIndex() < 1){
                JOptionPane.showMessageDialog(this, "Seleccione una cantidad de dias");
                cboCantidad.requestFocus(); 
            }
            else if(fechas.isEmpty()){
                JOptionPane.showMessageDialog(this, "Ingrese al menos una fecha");
                txtFecha.requestFocus();
            }
            else if(motivo.length() == 0){
                JOptionPane.showMessageDialog(this, "Ingrese un motivo");
                txtMotivo.requestFocus();
            }
            else{
                int numDias = Integer.parseInt(dias);
                if(fechas.size() == numDias){
                    int codigo = PermisoDAO.Codigo();
                    Permiso nuevo = new Permiso(codigo, rut, Login.user.getRut(), numDias, fecha, motivo, "Pendiente", "", 1, fechas);
                    if(PermisoDAO.Guardar(nuevo) ){
                        JOptionPane.showMessageDialog(this,"Permiso registrado exitosamente");
                        cboRut.setSelectedIndex(0);
                        cboCantidad.removeAllItems();
                        cboCantidad.addItem("<Seleccione Cantidad>");
                        txtFecha.setDate(null);
                        modelo.removeAllElements();
                        txtMotivo.setText("");
                    }
                    else{
                        JOptionPane.showMessageDialog(this,"Error al intentar registrar permiso");
                    }
                }
                else{
                    JOptionPane.showMessageDialog(this,"Fechas ingresadas distinta a cantidad de d√≠as");
                    txtFecha.requestFocus();
                }
            }
        }
        else {
        JOptionPane.showMessageDialog(this, "Seleccione RUT");
            cboRut.requestFocus();
        }
    }//GEN-LAST:event_butAceptarActionPerformed

    private void butAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butAgregarActionPerformed
        try{
            int dias = Integer.parseInt(cboCantidad.getSelectedItem().toString());
            if(modelo.getSize() < dias){
                String formato = txtFecha.getDateFormatString();
                Date fecha = txtFecha.getDate();
                if(fecha != null){
                    SimpleDateFormat sdf = new SimpleDateFormat(formato);
                    String fechaString = sdf.format(fecha);
                    if(!modelo.contains(fechaString)){
                        modelo.addElement(fechaString);
                        txtFecha.setDate(null);
                    }
                    else{
                        JOptionPane.showMessageDialog(this, "Fecha ya ingresada");
                    }
                }
                else{
                    JOptionPane.showMessageDialog(this, "Seleccione una fecha");
                    txtFecha.setDate(null);
                }
            }
            else{
                JOptionPane.showMessageDialog(this, "Exceso en cantidad de d√≠as");
                txtFecha.requestFocus();
            }
        }
        catch(Exception ex){
            JOptionPane.showMessageDialog(this, "Seleccione una cantidad de dias");
            cboCantidad.requestFocus(); 
        }
    }//GEN-LAST:event_butAgregarActionPerformed

    private void butQuitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butQuitarActionPerformed
        if(lstFechas.getSelectedIndex() != -1){
            modelo.remove(lstFechas.getSelectedIndex());
        }
    }//GEN-LAST:event_butQuitarActionPerformed

    private void cboCantidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboCantidadActionPerformed
        modelo.removeAllElements();
    }//GEN-LAST:event_cboCantidadActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel CantDias;
    private javax.swing.JLabel Cargo;
    private javax.swing.JButton butAceptar;
    private javax.swing.JButton butAgregar;
    private javax.swing.JButton butCancelar;
    private javax.swing.JButton butQuitar;
    private javax.swing.JComboBox cboCantidad;
    private javax.swing.JComboBox cboRut;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList lstFechas;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JTextField txtCargo;
    private com.toedter.calendar.JDateChooser txtFecha;
    private javax.swing.JTextArea txtMotivo;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
