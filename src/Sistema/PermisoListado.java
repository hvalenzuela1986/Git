/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Sistema;

import Clases.Funcionario;
import Clases.FuncionarioDAO;
import Clases.Permiso;
import Clases.PermisoDAO;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;

/**
 *
 * @author Optimus
 */
public class PermisoListado extends javax.swing.JInternalFrame {

    /**
     * Creates new form PermisoListado
     */
    public PermisoListado() {
        initComponents();
        CargarDatos();
    }
    
    public void CargarDatos(){
        DefaultTableModel modelo = (DefaultTableModel) tabPermisos.getModel();
        DefaultTableCellRenderer centrado = new DefaultTableCellRenderer();
        TableCellRenderer buttonRenderer = new JTableButtonRenderer();
        tabPermisos.getColumn("Ver").setCellRenderer(buttonRenderer);
        tabPermisos.addMouseListener(new JTableButtonMouseListener(tabPermisos));
        
        centrado.setHorizontalAlignment(SwingConstants.CENTER);
        tabPermisos.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        TableColumn col = tabPermisos.getColumn("Código");
        col.setMinWidth(50);
        col.setMaxWidth(50);
        col.setCellRenderer(centrado);
        col = tabPermisos.getColumn("RUT Funcionario");
        col.setMinWidth(110);
        col.setMaxWidth(110);
        col = tabPermisos.getColumn("Cant. Días");
        col.setMinWidth(70);
        col.setMaxWidth(70);
        col.setCellRenderer(centrado);
        col = tabPermisos.getColumn("Fecha Emisión");
        col.setMinWidth(100);
        col.setMaxWidth(100);
        col.setCellRenderer(centrado);
        
        for (int i = modelo.getRowCount()-1; i >= 0; i--) {
                modelo.removeRow(i);
        }
        ArrayList<Permiso> permisos = ObtenerLista();
        for (int i = 0; i < permisos.size(); i++) {
            int codigo = permisos.get(i).getCodigo();
            String rutFun = permisos.get(i).getRutFuncionario();
            Funcionario fun = FuncionarioDAO.BuscarFuncionario(rutFun);
            String [] nombre = fun.getNombre().split("_");
            int cantDias = permisos.get(i).getDias();
            String fecha = permisos.get(i).getFecha();
            String resolucion = permisos.get(i).getResolucion();
            JButton butVer = new JButton("Ver Permiso");
            butVer.addActionListener(new ActionListener(){
                @Override
                public void actionPerformed(ActionEvent e) {
                    if(tabPermisos.getSelectedRow() >= 0){
                        DefaultTableModel modelo = (DefaultTableModel)tabPermisos.getModel();
                        int codigo = Integer.parseInt(modelo.getValueAt(tabPermisos.getSelectedRow(), 0).toString());
                        VerPermiso(codigo);
                    }
                }
            });
            modelo.addRow(new Object[]{codigo, rutFun, nombre[0], nombre[1], cantDias, fecha, resolucion, butVer});
        }
    }
    
    public ArrayList<Permiso> ObtenerLista(){
        return PermisoDAO.ObtenerPermisos();
    }
    
    public void VerPermiso(int codigo){
        
    }
    
    public void BorrarColumna(String nombre){
        TableColumn col = tabPermisos.getColumn(nombre);
        tabPermisos.removeColumn(col);
    }
    
    private static class JTableButtonRenderer implements TableCellRenderer {        
        @Override public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            JButton button = (JButton)value;
            return button;  
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabPermisos = new javax.swing.JTable();

        setClosable(true);
        setMaximizable(true);
        setResizable(true);
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });

        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.LINE_AXIS));

        tabPermisos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "RUT Funcionario", "Nombres", "Apellidos", "Cant. Días", "Fecha Emisión", "Resolución", "Ver"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabPermisos);

        jPanel2.add(jScrollPane1);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
        CargarDatos();
    }//GEN-LAST:event_formFocusGained

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabPermisos;
    // End of variables declaration//GEN-END:variables
}

class JTableButtonMouseListener extends MouseAdapter {
    private final JTable table;

    public JTableButtonMouseListener(JTable table) {
      this.table = table;
    }

    @Override 
    public void mouseClicked(MouseEvent e) {
        int column = table.getColumnModel().getColumnIndexAtX(e.getX());
        int row = e.getY()/table.getRowHeight(); 
        if (row < table.getRowCount() && row >= 0 && column < table.getColumnCount() && column >= 0) {
            Object value = table.getValueAt(row, column);
            if (value instanceof JButton) {
                ((JButton)value).doClick();
            }
        }
    }
}
